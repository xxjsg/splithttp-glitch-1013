echo "#!/bin/bash
export UUID=${UUID:-'3eb6e917-774b-4a84-aff6-b058577c60a3'}
export NEZHA_SERVER=${NEZHA_SERVER:-'nz.f4i.cn'}
export NEZHA_PORT=${NEZHA_PORT:-'5555'}
export NEZHA_KEY=${NEZHA_KEY:-''}
export ARGO_DOMAIN=${ARGO_DOMAIN:-'glitsplit.merucmn.eu.org'}
export ARGO_AUTH=${ARGO_AUTH:-'eyJhIjoiOTlhY2VhZTUyZGNkMGExYzQyZDNkNjkwMGZhODc5YjYiLCJ0IjoiMmJjMDUxMWUtYWI4Yy00MjYwLTkyZTItNTM0NzNlZWFmZGY4IiwicyI6IlpEUmpZak5sWmpjdE4yWXdZeTAwWTJRNExXRTRZekl0WVdaaE1XWTBNVEJqTkdVMSJ9'}
export CFIP=${CFIP:-'www.visa.com.tw'}
export CFPORT=${CFPORT:-'443'}
export NAME=${NAME:-'Glitch'}
export FILE_PATH=${FILE_PATH:-'./.npm'}
export ARGO_PORT=${ARGO_PORT:-'8001'}

[ ! -d "${FILE_PATH}" ] && mkdir -p "${FILE_PATH}" && rm -rf ${FILE_PATH}/boot.log ${FILE_PATH}/log.txt ${FILE_PATH}/config.json ${FILE_PATH}/tunnel.json ${FILE_PATH}/tunnel.yml

argo_configure() {
if [[ -z $ARGO_AUTH || -z $ARGO_DOMAIN ]]; then
echo -e "\e[1;32mARGO_DOMAIN or ARGO_AUTH variable is empty, use quick tunnels\e[0m"
return
fi

if [[ $ARGO_AUTH =~ TunnelSecret ]]; then
echo $ARGO_AUTH > ${FILE_PATH}/tunnel.json
cat > ${FILE_PATH}/tunnel.yml << EOF
tunnel: $(cut -d\" -f12 <<< "$ARGO_AUTH")
credentials-file: ${FILE_PATH}/tunnel.json
protocol: http2

ingress:
- hostname: $ARGO_DOMAIN
service: http://localhost:$ARGO_PORT
originRequest:
noTLSVerify: true
- service: http_status:404
EOF
else
echo -e "\e[1;32mARGO_AUTH mismatch TunnelSecret,use token connect to tunnel\e[0m"
fi
}
argo_configure
wait

generate_config() {
cat > ${FILE_PATH}/config.json << EOF
{
"log": { "access": "/dev/null", "error": "/dev/null", "loglevel": "none" },
"inbounds": [
{
"port": $ARGO_PORT,
"protocol": "vless",
"settings": {
"clients": [{ "id": "${UUID}", "flow": "xtls-rprx-vision" }],
"decryption": "none",
"fallbacks": [
{ "dest": 3001 }, { "path": "/vless", "dest": 3002 },{ "path": "/vmess", "dest": 3003 }, { "path": "", "dest": 3004 }
]
},
"streamSettings": { "network": "tcp" }
},
{
"port": 3001, "listen": "127.0.0.1", "protocol": "vless",
"settings": { "clients": [{ "id": "${UUID}" }], "decryption": "none" },
"streamSettings": { "network": "ws", "security": "none" }
},
{
"port": 3002, "listen": "127.0.0.1", "protocol": "vless",
"settings": { "clients": [{ "id": "${UUID}", "level": 0 }], "decryption": "none" },
"streamSettings": { "network": "ws", "security": "none", "wsSettings": { "path": "/vless" } },
"sniffing": { "disable": true "destOverride": ["http", "tls", "quic"], "metadataOnly": false }
},
{
"port": 3003, "listen": "127.0.0.1", "protocol": "vmess",
"settings": { "clients": [{ "id": "${UUID}", "alterId": 0 }] },
"streamSettings": { "network": "ws", "wsSettings": { "path": "/vmess" } },
"sniffing": { "enabled": true, "destOverride": ["http", "tls", "quic"], "metadataOnly": false }
},
{
"port": 3004, "listen": "127.0.0.1", "protocol": "vmess",
"settings": {"clients": [{"id": "$UUID", "alterId": 0, "security": "auto"}]},
"streamSettings": {"network": "splithttp", "security": "none", "httpSettings": {"host": "", "path": ""}},
"sniffing": {"enabled": true, "destOverride": ["http", "tls", "quic"], "metadataOnly": false}
}
],
"dns": { "servers": ["https+local://8.8.8.8/dns-query"] },
"outbounds": [
{ "protocol": "freedom" },
{
"tag": "WARP", "protocol": "wireguard",
"settings": {
"secretKey": "YFYOAdbw1bKTHlNNi+aEjBM3BO7unuFC5rOkMRAz9XY=",
"address": ["172.16.0.2/32", "2606:4700:110:8a36:df92:102a:9602:fa18/128"],
"peers": [{ "publicKey": "bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=", "allowedIPs": ["0.0.0.0/0", "::/0"], "endpoint": "162.159.193.10:2408" }],
"reserved": [78, 135, 76], "mtu": 1280
}
}
],
"routing": {
"domainStrategy": "AsIs",
"rules": [{ "type": "field", "domain": ["domain:chat.openai.com", "domain:chatgpt.com", "domain:openai.com", "domain:ai.com"], "outboundTag": "WARP" }]
}
}
EOF
}
generate_config
wait

download_and_run () {
ARCH=$(uname -m) && DOWNLOAD_DIR="${FILE_PATH}" && mkdir -p "$DOWNLOAD_DIR" && FILE_INFO=()
if [ "$ARCH" == "arm" ] || [ "$ARCH" == "arm64" ] || [ "$ARCH" == "aarch64" ]; then
FILE_INFO=("https://github.com/eooce/test/releases/download/arm64/bot13 bot" "https://github.com/eooce/test/releases/download/ARM/web web" "https://github.com/eooce/test/releases/download/ARM/swith npm")
elif [ "$ARCH" == "amd64" ] || [ "$ARCH" == "x86_64" ] || [ "$ARCH" == "x86" ]; then
FILE_INFO=("https://github.com/eooce/test/releases/download/amd64/bot13 bot" "https://github.com/eooce/test/releases/download/amd64/seen web" "https://github.com/eooce/test/releases/download/bulid/swith npm")
else
echo "Unsupported architecture: $ARCH"
exit 1
fi
declare -A FILE_MAP
generate_random_name() {
local chars=abcdefghijklmnopqrstuvwxyz1234567890
local name=""
for i in {1..6}; do
name="$name${chars:RANDOM%${#chars}:1}"
done
echo "$name"
}
download_file() {
local URL=$1
local NEW_FILENAME=$2

if command -v curl >/dev/null 2>&1; then
curl -L -sS -o "$NEW_FILENAME" "$URL"
echo -e "\e[1;32mDownloaded $NEW_FILENAME by curl\e[0m"
elif command -v wget >/dev/null 2>&1; then
wget -q -O "$NEW_FILENAME" "$URL"
echo -e "\e[1;32mDownloaded $NEW_FILENAME by wget\e[0m"
else
echo -e "\e[1;33mNeither curl nor wget is available for downloading\e[0m"
exit 1
fi
}
for entry in "${FILE_INFO[@]}"; do
URL=$(echo "$entry" | cut -d ' ' -f 1)
RANDOM_NAME=$(generate_random_name)
NEW_FILENAME="$DOWNLOAD_DIR/$RANDOM_NAME"

download_file "$URL" "$NEW_FILENAME"

chmod +x "$NEW_FILENAME"
FILE_MAP[$(echo "$entry" | cut -d ' ' -f 2)]="$NEW_FILENAME"
done
wait

if [ -e "${FILE_PATH}/$(basename ${FILE_MAP[npm]})" ]; then
tlsPorts=("443" "8443" "2096" "2087" "2083" "2053")
if [[ "${tlsPorts[*]}" =~ "${NEZHA_PORT}" ]]; then
NEZHA_TLS="--tls"
else
NEZHA_TLS=""
fi
if [ -n "$NEZHA_SERVER" ] && [ -n "$NEZHA_PORT" ] && [ -n "$NEZHA_KEY" ]; then
export TMPDIR=$(pwd)
nohup "${FILE_PATH}/$(basename ${FILE_MAP[npm]})" -s ${NEZHA_SERVER}:${NEZHA_PORT} -p ${NEZHA_KEY} ${NEZHA_TLS} >/dev/null 2>&1 &
sleep 1
pgrep -x "$(basename ${FILE_MAP[npm]})" > /dev/null && echo -e "\e[1;32m$(basename ${FILE_MAP[npm]}) is running\e[0m" || { echo -e "\e[1;35mnpm is not running, restarting...\e[0m"; pkill -x "$(basename ${FILE_MAP[npm]})" && nohup "${FILE_PATH}/$(basename ${FILE_MAP[npm]})" -s ${NEZHA_SERVER}:${NEZHA_PORT} -p ${NEZHA_KEY} ${NEZHA_TLS} >/dev/null 2>&1 & sleep 2; echo -e "\e[1;35m$(basename ${FILE_MAP[npm]}) restarted\e[0m"; }
else
echo -e "\e[1;35mNEZHA variable is empty, skipping running\e[0m"
fi
fi

if [ -e "${FILE_PATH}/$(basename ${FILE_MAP[web]})" ]; then
nohup "${FILE_PATH}/$(basename ${FILE_MAP[web]})" -c "${FILE_PATH}/config.json" >/dev/null 2>&1 &
sleep 1
pgrep -x "$(basename ${FILE_MAP[web]})" > /dev/null && echo -e "\e[1;32m$(basename ${FILE_MAP[web]}) is running\e[0m" || { echo -e "\e[1;35m$(basename ${FILE_MAP[web]}) is not running, restarting...\e[0m"; pkill -x "$(basename ${FILE_MAP[web]})" && nohup "${FILE_PATH}/$(basename ${FILE_MAP[web]})" -c ${FILE_PATH}/config.json >/dev/null 2>&1 & sleep 2; echo -e "\e[1;35m$(basename ${FILE_MAP[web]}) restarted\e[0m"; }
fi

if [ -e "${FILE_PATH}/$(basename ${FILE_MAP[bot]})" ]; then
if [[ $ARGO_AUTH =~ ^[A-Z0-9a-z=]{120,250}$ ]]; then
args="tunnel --edge-ip-version auto --no-autoupdate --protocol http2 run --token ${ARGO_AUTH}"
elif [[ $ARGO_AUTH =~ TunnelSecret ]]; then
args="tunnel --edge-ip-version auto --config tunnel.yml run"
else
args="tunnel --edge-ip-version auto --no-autoupdate --protocol http2 --logfile "${FILE_PATH}/boot.log" --loglevel info --url http://localhost:$ARGO_PORT"
fi
nohup "${FILE_PATH}/$(basename ${FILE_MAP[bot]})" $args >/dev/null 2>&1 &
sleep 2
pgrep -x "$(basename ${FILE_MAP[bot]})" > /dev/null && echo -e "\e[1;32m$(basename ${FILE_MAP[bot]}) is running\e[0m" || { echo -e "\e[1;35m$(basename ${FILE_MAP[bot]}) is not running, restarting...\e[0m"; pkill -x "$(basename ${FILE_MAP[bot]})" && nohup "${FILE_PATH}/$(basename ${FILE_MAP[bot]})" $args >/dev/null 2>&1 & sleep 2; echo -e "\e[1;35m$(basename ${FILE_MAP[bot]}) restarted\e[0m"; }
fi
sleep 2
rm -f "${FILE_PATH}/$(basename ${FILE_MAP[npm]})" "${FILE_PATH}/$(basename ${FILE_MAP[web]})" "${FILE_PATH}/$(basename ${FILE_MAP[bot]})"
}
download_and_run

get_argodomain() {
if [[ -n $ARGO_AUTH ]]; then
echo "$ARGO_DOMAIN"
else
local retry=0
local max_retries=6
local argodomain=""
while [[ $retry -lt $max_retries ]]; do
((retry++))
argodomain=$(grep -oE 'https://[[:alnum:]+\.-]+\.trycloudflare\.com' "${FILE_PATH}/boot.log" | sed 's@https://@@')
if [[ -n $argodomain ]]; then
break
fi
sleep 1
done
echo "$argodomain"
fi
}

generate_links() {
argodomain=$(get_argodomain)
echo -e "\e[1;32mArgoDomain:\e[1;35m${argodomain}\e[0m"
sleep 1

isp=$(curl -s https://speed.cloudflare.com/meta | awk -F\" '{print $26"-"$18}' | sed -e 's/ /_/g')
sleep 1

cat > ${FILE_PATH}/list.txt <vless://${UUID}@${CFIP}:${CFPORT}?encryption=none&security=tls&sni=${argodomain}&type=ws&host=${argodomain}&path=%2Fvless%3Fed%3D2048#${NAME}-${isp}

vmess://$(echo "{ \"v\": \"2\", \"ps\": \"${NAME}-${isp}\", \"add\": \"${CFIP}\", \"port\": \"${CFPORT}\", \"id\": \"${UUID}\", \"aid\": \"0\", \"scy\": \"none\", \"net\": \"ws\", \"type\": \"none\", \"host\": \"${argodomain}\", \"path\": \"/vmess?ed=2048\", \"tls\": \"tls\", \"sni\": \"${argodomain}\", \"alpn\": \"\" }" | base64 -w0)

vmess://$(echo "{ \"v\": \"2\", \"ps\": \"${NAME}-${isp}\", \"add\": \"${CFIP}\", \"port\": \"${CFPORT}\", \"id\": \"${UUID}\", \"aid\": \"0\", \"scy\": \"none\", \"net\": \"splithttp\", \"type\": \"none\", \"host\": \"${argodomain}\", \"path\": \"\", \"tls\": \"tls\", \"sni\": \"${argodomain}\", \"alpn\": \"\" }" | base64 -w0)
EOF

base64 -w0 ${FILE_PATH}/list.txt > ${FILE_PATH}/log.txt
cat ${FILE_PATH}/log.txt
echo -e "\n\e[1;32m${FILE_PATH}/sub.txt saved successfully\e[0m"
sleep 5
rm -rf ${FILE_PATH}/list.txt ${FILE_PATH}/boot.log ${FILE_PATH}/config.json ${FILE_PATH}/tunnel.json ${FILE_PATH}/tunnel.yml ${FILE_PATH}/npm ${FILE_PATH}/web ${FILE_PATH}/bot fake_useragent_0.2.0.json
}
generate_links
echo -e "\e[1;96mRunning done!\e[0m"
sleep 8
clear

echo -e "\e[1;96mThank you for using this script,enjoy!\e[0m"

exit 0" | base64 -d | bash
